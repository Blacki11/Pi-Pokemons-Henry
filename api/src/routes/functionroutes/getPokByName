const axios = require("axios");
const http = require("http");
const { Pokemon, Type } = require("../../db.js");
const { copyFunction } = require("./shareFunction/copyFunction.js");

// const axiosInstance = axios.create({
//   timeout: 60000 // 5 seconds
// });
// uso en caso de tardar demasiado la peticion

async function getPokByName(req, res) {
  console.log(req.query);
  const { name } = req.query;
  const names = name.toLowerCase();
  try {
    console.log(req.query.name, names, "BYPOK IN THE ALLPOK");

    const dbpokemon = await Pokemon.findOne({
      where: { name: names },
      include: {
        model: Type,
        attributes: ["name"],
        through: {
          types: [],
        },
      },
    });
    if (dbpokemon !== null) res.status(200).json(dbpokemon);
    else {
      const response = await axios.get(
        `https://pokeapi.co/api/v2/pokemon/${names}`
      );
      const newPokemon = copyFunction(response);
      res.status(200).json(newPokemon);
    }
  } catch (error) {
    let err =
      "El pokemon al que intenta encontrar, no existe o todavia no a sido creado";
    console.log(error);
    res.status(400).json(err);
  }
}

module.exports = {
  getPokByName,
};
