const axios = require("axios");
const http = require("http");
const { Pokemon, Type } = require("../../db.js");
const { copyFunction } = require("./shareFunction/copyFunction.js");

/* Trae los pokemons por nombre */
async function getPokByName(req, res) {
  const { name } = req.query;
  const names = name.toLowerCase();
  try {
    const dbpokemon = await Pokemon.findOne({
      where: { name: names },
      include: {
        model: Type,
        attributes: ["name"],
        through: {
          types: [],
        },
      },
    });
    if (dbpokemon !== null) res.status(200).json(dbpokemon);
    else {
      const response = await axios.get(
        `https://pokeapi.co/api/v2/pokemon/${names}`
      );
      const id = response.data.id;
      if (id > 151) {
        res
          .status(302)
          .json(
            "El Pokemon que intenta buscar no pertenece a la primera generacion pokemon"
          );
      } else {
        const newPokemon = copyFunction(response);
        res.status(200).json(newPokemon);
      }
    }
  } catch (error) {
    let err =
      "El pokemon al que intenta encontrar, no existe o todavia no a sido creado";
    console.log(error);
    res.status(400).json(err);
  }
}

module.exports = {
  getPokByName,
};
